import 'dart:convert';import 'package:flutter/material.dart';import 'package:flutter_easyloading/flutter_easyloading.dart';import 'package:godelivery_rider/Ui/GetStarted.dart';import 'package:godelivery_rider/Utils/functions.dart';import 'package:google_fonts/google_fonts.dart';import 'package:intl_phone_number_input/intl_phone_number_input.dart';import 'package:godelivery_rider/animation/SlidePageRoute.dart';import 'package:http/http.dart' as http;import 'package:shared_preferences/shared_preferences.dart';class Login extends StatefulWidget {  @override  _LoginState createState() => _LoginState();}class _LoginState extends State<Login> {  TextEditingController telephone = new TextEditingController();  TextEditingController email = new TextEditingController();  TextEditingController codeSecret = new TextEditingController();  String initialCountry = 'GA';  PhoneNumber number = PhoneNumber(isoCode: 'GA');  bool _obscureText=true;  void _toggle() {    setState(() {      _obscureText = !_obscureText;    });  }  @override  void initState() {     EasyLoading.init();  } //Form Validation  var _formKey = GlobalKey<FormState>();  void validate(email,password) async{    final FormState form = _formKey.currentState;    if (form.validate()) {      //EasyLoading.show(status: 'loading...');      print('Form is valid');      var newString = telephone.text.substring(telephone.text.length - 8);      var queryResponse = await http.post(        Uri.parse('https://dev-cashdelivery.ventis.group/api/login'),        headers: <String, String>{          'Content-Type': 'application/json; charset=UTF-8',        },        body: jsonEncode(<String, String>{          'telephoneAgent': newString,          'codeAgent': codeSecret.text,        }),      ).catchError((onError){        showErrorToast(context, 'Vérifiez votre Connexion Internet ');      });      print('retour API : ' + '${queryResponse.body}');      EasyLoading.dismiss();      if(queryResponse!=null && queryResponse.statusCode==200){        var queryResponseBody = json.decode(queryResponse.body);        if(queryResponseBody['status']=='OK'){          final prefs = await SharedPreferences.getInstance();          prefs?.setBool("isLoggedIn", true);          var id = queryResponseBody['agent']['id'];          var code = queryResponseBody['agent']['codeAgent'];          var nom = queryResponseBody['agent']['nomAgent'];          var tel = queryResponseBody['agent']['telephoneAgent'];          var adress = queryResponseBody['agent']['adresseAgent'];          prefs.setString('agent_agent', code);          prefs.setInt('agent_id', id);          prefs.setString('nom', nom);          prefs.setString('tel', tel);          prefs.setString('adress', adress);          prefs.setString('adress', adress);          // var agent_code = prefs.getString('agent_agent');          // var agent_id = prefs.getInt('agent_id');          // print('Code agent : ' + agent_code);          // print('Identifiant agent : ' + '$agent_id');          setState(() {            telephone.text = '';            codeSecret.text = '';          });           Navigator.push(this.context, SlidePageRoute(page: GetStarted()));        }else{          showErrorToast(context, '${queryResponseBody['message_content']}');          print(telephone.text);          print(codeSecret.text);          var newString = telephone.text.substring(telephone.text.length - 8);          print(newString);        }      }else{        showErrorToast(context, 'Verifiez votre connexion internet');      }    } else {      showErrorToast(context, 'Form invalid');    }  }  GlobalKey<ScaffoldState> _scaffoldKey = GlobalKey();  @override  Widget build(BuildContext context) {    var controller;    return SafeArea(        child: Scaffold(      key: _scaffoldKey,      body: Center(        child: Form(          key: _formKey,          child: SingleChildScrollView(            child: Column(              crossAxisAlignment: CrossAxisAlignment.stretch,              children: <Widget>[            Container(            margin: const EdgeInsets.fromLTRB(0, 20, 0, 0),            child: Row(              mainAxisAlignment: MainAxisAlignment.center,              children: [                Text(                  'Cash Delivery',                  style: GoogleFonts.exo(                    fontSize: 26,                    fontWeight: FontWeight.w900,                    color: Colors.black,                  ),                ),                const SizedBox(width: 3),                Text(                  'Connexion',                  style: GoogleFonts.exo(                      fontSize: 26,                      fontWeight: FontWeight.w900,                      color: Colors.green),                ),              ],            ),          ),                SizedBox(height: 40,),                Center(                  child: Text(                    'Connectez-vous',                    style: GoogleFonts.comfortaa(fontSize: 18, fontWeight: FontWeight.bold, color: Colors.black),                  ),                ),                SizedBox(height: 40,),                Container(                  margin: const EdgeInsets.only(left: 20.0, right: 20.0),                  padding: EdgeInsets.all(0.01),                  color: Colors.green,                  child: Card(                      child: Container(                        padding: EdgeInsets.all(2),                        child: Column(                          mainAxisAlignment: MainAxisAlignment.center,                          children: <Widget>[                            InternationalPhoneNumberInput(                              hintText: 'Téléphone',                              errorMessage: 'Numéro de téléphone incorrecte',                              onInputChanged: (PhoneNumber number) {                                print(number.phoneNumber);                              },                              onInputValidated: (bool value) {                                print(value);                              },                              selectorConfig: SelectorConfig(                                selectorType: PhoneInputSelectorType.BOTTOM_SHEET,                              ),                              ignoreBlank: false,                              autoValidateMode: AutovalidateMode.disabled,                              selectorTextStyle: TextStyle(color: Colors.black),                              initialValue: number,                              textFieldController: telephone,                              formatInput: false,                              keyboardType:                              TextInputType.numberWithOptions(signed: true, decimal: true),                              inputBorder: OutlineInputBorder(),                              onSaved: (PhoneNumber number) {                                print('On Saved: $number');                              },                            ),                          ],                        ),                      ),                  ),                ),                SizedBox(height: 30,),          Container(            margin: const EdgeInsets.only(left: 20.0, right: 20.0),            padding: EdgeInsets.all(0.001),            color: Colors.green,                child:Card(                child: Container(                  padding: EdgeInsets.symmetric(horizontal: 2),                  margin: EdgeInsets.symmetric(vertical: 2),                  child: Stack(                    children: [                      TextFormField(                        controller: codeSecret,                        obscureText: _obscureText,                        keyboardType: TextInputType.visiblePassword,                        validator: (val) => val.length < 6 ? 'Code erronné.' : null,                        decoration: InputDecoration(                          hintText:  "Code Secret",                          hintStyle: TextStyle(                            fontSize: 14,                            fontFamily: "medium",                          ),                        ),                        style: TextStyle(                            fontSize: 14,                            fontFamily: "medium",                            color: Theme.of(context).textTheme.headline1.color                        ),                      ),                      Positioned.directional(                        textDirection: Directionality.of(context),                        end: -9,                        top: 5,                        child: InkWell(                          onTap: () {                            _toggle();                          },                          child: Padding(                              padding: const EdgeInsets.all(8.0),                              child: _obscureText? Image.asset("assets/newIcons/eye.png",                                scale: 8,color: Colors.black87,                              ):Image.asset("assets/newIcons/ic_show.png",                                scale: 2.2,color: Colors.black87,                              )                          ),                        ),                      )                    ],                  ),                ),                ),          ),                SizedBox(height: 50,),                Container(                    padding: EdgeInsets.symmetric(horizontal: 20),                    child: MaterialButton(                  minWidth: MediaQuery.of(context).size.width,                  height: 44,                  onPressed: (){                    setState(() {                      if(email.text.isNotEmpty && codeSecret.text.isNotEmpty) {                        setState(() {                          //showProgressDialog();                        });                      }                      validate(email.text.replaceAll(" ", ""),codeSecret.text);                    });                  },                      elevation: 0,                      highlightElevation: 0,                        color: Colors.green,                  shape: RoundedRectangleBorder(                    borderRadius: BorderRadius.all(Radius.circular(5)),                  ),                  child: Text("Connexion",                    style: TextStyle(                      fontFamily: "medium",                        color: Theme.of(context).accentTextTheme.bodyText2.color,                        fontSize: 18                    ),                  ),                )),              ],            ),          ),        ),      ),    ));  }}